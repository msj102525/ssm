<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sdm.ssm.employee.mapper.EmployeeMapper">

	<!-- Employee 클래스에 대한 resultMap -->
	<resultMap type="Employee" id="resultList">
		<result property="empId" column="EMP_ID" />
		<result property="empName" column="EMP_NAME" />
		<result property="position" column="POSITION" />
		<result property="empHireDate" column="EMP_HIREDATE" />
		<result property="empPhone" column="EMP_PHONE" />
		<result property="empEmail" column="EMP_EMAIL" />
		<result property="empAddress" column="EMP_ADDRESS" />
		<result property="empBirthDate" column="EMP_BIRTHDATE" />
		<result property="empGender" column="EMP_GENDER" />
		<result property="id" column="ID" />
	</resultMap>

	<!-- SalaryInfo 클래스에 대한 resultMap -->
	<resultMap type="SalaryInfo" id="resultSalaryInfoList">
		<result property="empId" column="EMP_ID" />
		<result property="bankName" column="BANK_NAME" />
		<result property="bankAccountNo" column="BANK_ACCOUNT_NO" />
		<result property="accountHolder" column="ACCOUNT_HOLDER" />
		<result property="premium" column="PREMIUM" />
		<result property="tax" column="TAX" />
		<result property="id" column="ID" />
	</resultMap>

	<!-- 직원 전체조회 -->
	<select id="selectAllEmployees" resultMap="resultList">
		SELECT * FROM tbEmployee_${id}
	</select>

	<!-- 아이디 조회 -->
	<select id="selectempId" parameterType="int"
		resultMap="resultList">
		SELECT * FROM TB_EMPLOYEE_${id} WHERE empId = #{empId}
	</select>

	<!-- 직원 이름으로 검색 -->
	<select id="selectEmpName" parameterType="search"
		resultMap="resultList">
		SELECT * FROM TB_EMPLOYEE_${id} WHERE empName LIKE '%' || #{empName} || '%'
	</select>

	<!-- 직원정보 등록 -->
	<insert id="insertemp"
		parameterType="com.sdm.ssm.employee.model.vo.Employee">
		INSERT INTO TB_EMPLOYEE_${id} (EMP_ID, EMP_NAME, POSITION, EMP_HIREDATE,
		EMP_PHONE, EMP_EMAIL,
		EMP_ADDRESS, EMP_BIRTHDATE, EMP_GENDER) VALUES (#{empName}, #{position},
		#{empHireDate}, #{empPhone}, #{empEmail},
		#{empAddress}, #{empBirthDate}, #{empGender})
	</insert>

	<!-- 직원정보 수정 -->
	<update id="updateemp"
		parameterType="Employee">
		UPDATE TB_EMPLOYEE_${id} SET EMP_NAME=#{empName}, POSITION=#{position},
		EMP_HIREDATE=#{empHireDate}, EMP_PHONE=#{empPhone},
		EMP_EMAIL=#{empEmail}, EMP_ADDRESS=#{empAddress},
		EMP_BIRTHDATE=#{empBirthDate}, EMP_GENDER=#{empGender}
		WHERE EMP_ID=#{empId}
	</update>

	<!-- 직원 정보 삭제 -->
	<delete id="deleteemp" parameterType="int">
		DELETE FROM TB_EMPLOYEE_${id} WHERE empId=#{empId}
	</delete>

	<!-- 직원 급여 정보 등록 -->
	<insert id="insertSalaryInfo"
		parameterType="com.sdm.ssm.employee.model.vo.SalaryInfo">
		INSERT INTO tb_SalaryInfo (empId, bankName, bankAccountNo, accountHolder,
		premium, tax)
		VALUES (#{empId}, #{bankName}, #{bankAccountNo}, #{accountHolder},
		#{premium}, #{tax})
	</insert>

	<!-- 직원 급여 정보 조회 -->
	<!-- 특정 직원의 급여 정보 조회 -->
	<select id="selectSalaryInfoByEmpId" parameterType="int"
		resultMap="resultSalaryInfoList">
		SELECT * FROM tb_SalaryInfo WHERE empId = #{empId}
	</select>
	<!-- 모든 직원의 급여 정보 조회 -->
	<select id="selectAllSalaryInfos"
		resultMap="resultSalaryInfoList">
		SELECT * FROM tb_SalaryInfo_${ id }
	</select>

	<!-- 직원 급여 정보 수정 -->
	<update id="updateSalaryInfo"
		parameterType="com.sdm.ssm.employee.model.vo.SalaryInfo">
		UPDATE tbSalaryInfo
		SET bankName=#{bankName}, bankAccountNo=#{bankAccountNo},
		accountHolder=#{accountHolder},
		premium=#{premium}, tax=#{tax}
		WHERE empId=#{empId}
	</update>

	<!-- 직원 급여 정보 삭제 -->
	<delete id="deleteSalaryInfo" parameterType="int">
		DELETE FROM tbSalaryInfo WHERE empId=#{empId}
	</delete>


	<!-- 출퇴근 정보 -->
	<resultMap type="CommuteInfo" id="resultCommuteInfoList">
		<result property="empId" column="EMP_ID" />
		<result property="startTime" column="START_TIME" />
		<result property="workDay" column="WORK_DAY" />
		<result property="endTime" column="END_TIME" />
		<result property="workingHours" column="WORKING_HOURS" />
		<result property="lateFlag" column="LATE_FLAG" />
		<result property="leaveEarly" column="LEAVE_EARLY" />
		<result property="absenteeism" column="ABSENTEEISM" />
		<result property="id" column="ID" />
	</resultMap>

	<!-- 출퇴근 정보 조회 -->
	<select id="selectcommute" parameterType="String">
		SELECT * FROM TB_COMMUTE_INFO
		WHERE EMP_ID = #{empId}
	</select>

	<!-- 이름으로 출퇴근 정보 검색조회 -->
	<select id="commnamesarch" parameterType="String">
		SELECT * FROM TB_COMMUTE_INFO
		WHERE EMP_ID IN (SELECT EMP_ID FROM TB_EMPLOYEE WHERE EMP_NAME =
		#{empName})
	</select>

	<!-- 출퇴근 정보 등록 -->
	<insert id="insertCommuteInfo"
		parameterType="com.sdm.ssm.employee.model.vo.CommuteInfo">
		INSERT INTO TB_COMMUTE_INFO (EMP_ID, START_TIME, WORK_DAY, END_TIME,
		WORKING_HOURS, LATE_FLAG, LEAVE_EARLY, ABSENTEEISM)
		VALUES (#{empId}, #{startTime}, #{workDay}, #{endTime}, #{workingHours},
		#{lateFlag}, #{leaveEarly}, #{absenteeism})
	</insert>

	<!-- 출퇴근 정보 수정 -->
	<update id="updateCommuteInfo"
		parameterType="com.sdm.ssm.employee.model.vo.CommuteInfo">
		UPDATE TB_COMMUTE_INFO
		SET START_TIME=#{startTime}, END_TIME=#{endTime},
		WORKING_HOURS=#{workingHours}, LATE_FLAG=#{lateFlag},
		LEAVE_EARLY=#{leaveEarly}, ABSENTEEISM=#{absenteeism}
		WHERE EMP_ID=#{empId} AND WORK_DAY=#{workDay}
	</update>

	<!-- 출퇴근 정보 삭제 -->
	<delete id="deleteCommuteInfo" parameterType="map">
		DELETE FROM TB_COMMUTE_INFO
		WHERE EMP_ID=#{empId} AND WORK_DAY=#{workDay}
	</delete>

	<!-- 특정 날짜의 출퇴근 정보 조회 -->
	<select id="selectCommuteInfoByDate" parameterType="map"
		resultMap="resultCommuteInfoList">
		SELECT * FROM TB_COMMUTE_INFO WHERE EMP_ID=#{empId} AND WORK_DAY=#{workDay}
	</select>

	<!-- 특정 직원의 전체 출퇴근 정보 조회 -->
	<select id="selectAllCommuteInfosByEmpId" parameterType="String"
		resultMap="resultCommuteInfoList">
		SELECT * FROM TB_COMMUTE_INFO WHERE EMP_ID=#{empId}
	</select>
</mapper>
    
